// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ledger/heavy/exporter/record_exporter.proto

package exporter

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	record "github.com/insolar/insolar/insolar/record"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRecords struct {
	Polymorph            uint32   `protobuf:"varint,16,opt,name=Polymorph,proto3" json:"Polymorph,omitempty"`
	PulseNumber          []byte   `protobuf:"bytes,20,opt,name=PulseNumber,proto3" json:"PulseNumber,omitempty"`
	RecordNumber         uint32   `protobuf:"varint,21,opt,name=RecordNumber,proto3" json:"RecordNumber,omitempty"`
	Count                uint32   `protobuf:"varint,22,opt,name=Count,proto3" json:"Count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecords) Reset()         { *m = GetRecords{} }
func (m *GetRecords) String() string { return proto.CompactTextString(m) }
func (*GetRecords) ProtoMessage()    {}
func (*GetRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfb4fbd68f50939d, []int{0}
}

func (m *GetRecords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecords.Unmarshal(m, b)
}
func (m *GetRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecords.Marshal(b, m, deterministic)
}
func (m *GetRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecords.Merge(m, src)
}
func (m *GetRecords) XXX_Size() int {
	return xxx_messageInfo_GetRecords.Size(m)
}
func (m *GetRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecords.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecords proto.InternalMessageInfo

func (m *GetRecords) GetPolymorph() uint32 {
	if m != nil {
		return m.Polymorph
	}
	return 0
}

func (m *GetRecords) GetPulseNumber() []byte {
	if m != nil {
		return m.PulseNumber
	}
	return nil
}

func (m *GetRecords) GetRecordNumber() uint32 {
	if m != nil {
		return m.RecordNumber
	}
	return 0
}

func (m *GetRecords) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Record struct {
	Polymorph            uint32           `protobuf:"varint,16,opt,name=Polymorph,proto3" json:"Polymorph,omitempty"`
	PulseNumber          []byte           `protobuf:"bytes,20,opt,name=PulseNumber,proto3" json:"PulseNumber,omitempty"`
	RecordNumber         uint32           `protobuf:"varint,21,opt,name=RecordNumber,proto3" json:"RecordNumber,omitempty"`
	RecordID             []byte           `protobuf:"bytes,22,opt,name=RecordID,proto3" json:"RecordID,omitempty"`
	Record               *record.Material `protobuf:"bytes,23,opt,name=Record,proto3" json:"Record,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfb4fbd68f50939d, []int{1}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetPolymorph() uint32 {
	if m != nil {
		return m.Polymorph
	}
	return 0
}

func (m *Record) GetPulseNumber() []byte {
	if m != nil {
		return m.PulseNumber
	}
	return nil
}

func (m *Record) GetRecordNumber() uint32 {
	if m != nil {
		return m.RecordNumber
	}
	return 0
}

func (m *Record) GetRecordID() []byte {
	if m != nil {
		return m.RecordID
	}
	return nil
}

func (m *Record) GetRecord() *record.Material {
	if m != nil {
		return m.Record
	}
	return nil
}

type Records struct {
	Polymorph            uint32    `protobuf:"varint,16,opt,name=Polymorph,proto3" json:"Polymorph,omitempty"`
	Records              []*Record `protobuf:"bytes,20,rep,name=Records,proto3" json:"Records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Records) Reset()         { *m = Records{} }
func (m *Records) String() string { return proto.CompactTextString(m) }
func (*Records) ProtoMessage()    {}
func (*Records) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfb4fbd68f50939d, []int{2}
}

func (m *Records) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Records.Unmarshal(m, b)
}
func (m *Records) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Records.Marshal(b, m, deterministic)
}
func (m *Records) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Records.Merge(m, src)
}
func (m *Records) XXX_Size() int {
	return xxx_messageInfo_Records.Size(m)
}
func (m *Records) XXX_DiscardUnknown() {
	xxx_messageInfo_Records.DiscardUnknown(m)
}

var xxx_messageInfo_Records proto.InternalMessageInfo

func (m *Records) GetPolymorph() uint32 {
	if m != nil {
		return m.Polymorph
	}
	return 0
}

func (m *Records) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRecords)(nil), "exporter.GetRecords")
	proto.RegisterType((*Record)(nil), "exporter.Record")
	proto.RegisterType((*Records)(nil), "exporter.Records")
}

func init() {
	proto.RegisterFile("ledger/heavy/exporter/record_exporter.proto", fileDescriptor_dfb4fbd68f50939d)
}

var fileDescriptor_dfb4fbd68f50939d = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xce, 0x49, 0x4d, 0x49,
	0x4f, 0x2d, 0xd2, 0xcf, 0x48, 0x4d, 0x2c, 0xab, 0xd4, 0x4f, 0xad, 0x28, 0xc8, 0x2f, 0x2a, 0x49,
	0x2d, 0xd2, 0x2f, 0x4a, 0x4d, 0xce, 0x2f, 0x4a, 0x89, 0x87, 0xf1, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b,
	0xf2, 0x85, 0x38, 0x60, 0x7c, 0x29, 0xdd, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc,
	0x5c, 0xfd, 0xf4, 0xfc, 0xf4, 0x7c, 0x7d, 0xb0, 0x82, 0xa4, 0xd2, 0x34, 0x30, 0x0f, 0xcc, 0x01,
	0xb3, 0x20, 0x1a, 0xa5, 0xcc, 0x90, 0x94, 0x67, 0xe6, 0x15, 0xe7, 0xe7, 0x24, 0x16, 0x61, 0xd0,
	0x10, 0x2b, 0xa1, 0x14, 0x44, 0x9f, 0xd2, 0x3e, 0x46, 0x2e, 0x2e, 0xf7, 0xd4, 0x92, 0x20, 0xb0,
	0x58, 0xb1, 0x90, 0x0c, 0x17, 0x67, 0x40, 0x7e, 0x4e, 0x65, 0x6e, 0x7e, 0x51, 0x41, 0x86, 0x84,
	0x80, 0x02, 0xa3, 0x06, 0x6f, 0x10, 0x42, 0x40, 0x28, 0x82, 0x8b, 0x3b, 0xa0, 0x34, 0xa7, 0x38,
	0xd5, 0xaf, 0x34, 0x37, 0x29, 0xb5, 0x48, 0x42, 0x44, 0x81, 0x51, 0x83, 0xc7, 0xc9, 0xec, 0xc4,
	0x3d, 0x79, 0x86, 0x5b, 0xf7, 0xe4, 0xf5, 0x08, 0xbb, 0x40, 0x0f, 0x49, 0x77, 0x10, 0xb2, 0x51,
	0x42, 0x4a, 0x5c, 0x3c, 0x10, 0x27, 0x40, 0x8d, 0x16, 0x05, 0x5b, 0x8d, 0x22, 0x26, 0x24, 0xc2,
	0xc5, 0xea, 0x9c, 0x5f, 0x9a, 0x57, 0x22, 0x21, 0x06, 0x96, 0x84, 0x70, 0x94, 0xe6, 0x33, 0x71,
	0xb1, 0x41, 0x94, 0x0d, 0x6a, 0xc7, 0x7b, 0x72, 0x71, 0x40, 0xf8, 0x9e, 0x2e, 0x60, 0xf7, 0xf3,
	0x38, 0xe9, 0x42, 0xad, 0x56, 0x25, 0xc2, 0x6a, 0x4f, 0x97, 0x20, 0xb8, 0x76, 0x21, 0x3d, 0x98,
	0x87, 0x25, 0xc4, 0x15, 0x18, 0x35, 0xb8, 0x8d, 0x04, 0xf4, 0xa0, 0x31, 0xea, 0x9b, 0x58, 0x92,
	0x5a, 0x94, 0x99, 0x98, 0xe3, 0xc4, 0x02, 0x32, 0x3a, 0x08, 0xaa, 0x4a, 0x29, 0x98, 0x8b, 0x9d,
	0xb8, 0xe8, 0xd5, 0x82, 0x2b, 0x94, 0x10, 0x51, 0x60, 0x06, 0x9b, 0x0c, 0x4f, 0x9e, 0x10, 0x89,
	0x20, 0x98, 0x02, 0x23, 0x57, 0x2e, 0x3e, 0x08, 0xd3, 0x15, 0xaa, 0x42, 0xc8, 0x98, 0x8b, 0x0d,
	0xc2, 0x16, 0x12, 0x41, 0x68, 0x43, 0x24, 0x2d, 0x29, 0x41, 0x74, 0xc3, 0x8a, 0x95, 0x18, 0x92,
	0xd8, 0xc0, 0xa9, 0xd0, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xba, 0xbf, 0x14, 0x42, 0x25, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecordExporterClient is the client API for RecordExporter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecordExporterClient interface {
	Export(ctx context.Context, in *GetRecords, opts ...grpc.CallOption) (*Records, error)
}

type recordExporterClient struct {
	cc *grpc.ClientConn
}

func NewRecordExporterClient(cc *grpc.ClientConn) RecordExporterClient {
	return &recordExporterClient{cc}
}

func (c *recordExporterClient) Export(ctx context.Context, in *GetRecords, opts ...grpc.CallOption) (*Records, error) {
	out := new(Records)
	err := c.cc.Invoke(ctx, "/exporter.RecordExporter/Export", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecordExporterServer is the server API for RecordExporter service.
type RecordExporterServer interface {
	Export(context.Context, *GetRecords) (*Records, error)
}

// UnimplementedRecordExporterServer can be embedded to have forward compatible implementations.
type UnimplementedRecordExporterServer struct {
}

func (*UnimplementedRecordExporterServer) Export(ctx context.Context, req *GetRecords) (*Records, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Export not implemented")
}

func RegisterRecordExporterServer(s *grpc.Server, srv RecordExporterServer) {
	s.RegisterService(&_RecordExporter_serviceDesc, srv)
}

func _RecordExporter_Export_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecordExporterServer).Export(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exporter.RecordExporter/Export",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecordExporterServer).Export(ctx, req.(*GetRecords))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecordExporter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "exporter.RecordExporter",
	HandlerType: (*RecordExporterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Export",
			Handler:    _RecordExporter_Export_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ledger/heavy/exporter/record_exporter.proto",
}
